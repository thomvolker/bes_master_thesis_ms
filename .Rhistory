geom_line() +
facet_wrap(~r2, labeller = label_parsed) +
scale_linetype_manual("",values = c(1,2,1,2), labels = scales::parse_format()) +
scale_color_manual("", values = c(brew[1], brew[1], brew[2], brew[2]),
labels = scales::parse_format()) +
labs(y = "PMP",
x = "Sample size") +
theme_minimal() +
theme(text = element_text(family = "Times New Roman"),
legend.position = "bottom",
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-5,0,-5,0)) +
ylim(0,1)
extrafont::fonts()
extrafont::font_import()
extrafont::loadfonts()
brew <- RColorBrewer::brewer.pal(2, "Set1")
brew
brew <- RColorBrewer::brewer.pal(2, "Set1")
bind_rows("Simulation 1" = output1,
"Simulation 2" = output2,
.id = "Simulation") |>
group_by(Simulation, nsim, n, r2) |>
summarize(bf_1u = prod(bf_1u),
bf_cu = prod(bf_cu), .groups = "drop") %>%
mutate(pmp_1u = bf_1u / (bf_1u + 1),
pmp_1c = bf_1u / (bf_1u + bf_cu)) %>%
group_by(Simulation, n, r2) %>%
summarize(pmp_1u = mean(pmp_1u),
pmp_1c = mean(pmp_1c),
.groups = "drop") %>%
tidyr::pivot_longer(c(pmp_1u, pmp_1c), names_to = "Hypothesis") %>%
mutate(hypo = recode_factor(Hypothesis, "pmp_1u" = 1, "pmp_1c" = 2),
sim  = recode_factor(Simulation, "Simulation 1" = 1, "Simulation 2" = 2),
labs = interaction(sim, hypo) |>
factor(levels = c("1.1", "1.2", "2.1", "2.2"),
labels = c(expression(Sim.~1-PMP[iu]),
expression(Sim.~1-PMP[ic]),
expression(Sim.~2-PMP[iu]),
expression(Sim.~2-PMP[ic])))) |>
ggplot(aes(x = n, y = value, col = labs, linetype = labs)) +
geom_line() +
facet_wrap(~r2, labeller = label_parsed) +
scale_linetype_manual("",values = c(1,2,1,2), labels = scales::parse_format()) +
scale_color_manual("", values = c(brew[1], brew[1], brew[2], brew[2]),
labels = scales::parse_format()) +
labs(y = "PMP",
x = "Sample size") +
theme_minimal() +
theme(text = element_text(family = "Times New Roman"),
legend.position = "bottom",
legend.margin=margin(0,0,0,0),
legend.box.margin=margin(-5,0,-5,0)) +
ylim(0,1)
PMP1 <- output1 %>%
group_by(nsim, n, r2) %>%
summarize(bf_1u = prod(bf_1u),                           # calculate aggregated
bf_cu = prod(bf_cu), .groups = "drop") %>%     # bayes factor
mutate(pmp_1u = bf_1u / (bf_1u + 1),                     # calculate PMP's
pmp_1c = bf_1u / (bf_1u + bf_cu)) %>%
group_by(n, r2) %>%
summarize(pmp_1u = mean(pmp_1u),                         # obtain average PMP per
pmp_1c = mean(pmp_1c)) %>%                     # simulation condition
tidyr::pivot_longer(c(pmp_1u, pmp_1c), names_to = "Hypothesis") %>%
mutate(Hypothesis = factor(Hypothesis,
levels = c("pmp_1u", "pmp_1c"),
labels = c(expression(PMP["iu"]), expression(PMP["ic"])))) %>%
ggplot(aes(x = n, y = value, col = Hypothesis)) +
geom_line() +
facet_wrap(~r2, labeller = label_parsed) +
scale_color_brewer(palette = "Set2", labels = scales::parse_format()) +
theme_minimal() +
labs(y = "PMP",
x = "Sample size") +
ylim(0.2,1) +
theme(text = element_text(family = "Times New Roman"))
PMP2 <- output2 %>%
group_by(nsim, n, r2) %>%
summarize(bf_1u = prod(bf_1u),
bf_cu = prod(bf_cu), .groups = "drop") %>%
mutate(pmp_1u = bf_1u / (bf_1u + 1),
pmp_1c = bf_1u / (bf_1u + bf_cu)) %>%
group_by(n, r2) %>%
summarize(pmp_1u = mean(pmp_1u),
pmp_1c = mean(pmp_1c)) %>%
tidyr::pivot_longer(c(pmp_1u, pmp_1c), names_to = "Hypothesis") %>%
mutate(Hypothesis = factor(Hypothesis,
levels = c("pmp_1u", "pmp_1c"),
labels = c(expression(PMP["iu"]), expression(PMP["ic"])))) %>%
ggplot(aes(x = n, y = value, col = Hypothesis)) +
geom_line() +
facet_wrap(~r2, labeller = label_parsed) +
scale_color_brewer(palette = "Set2", labels = scales::parse_format()) +
labs(y = "PMP",
x = "Sample size") +
theme_minimal() +
theme(text = element_text(family = "Times New Roman")) +
ylim(0.2,1)
wrap_plots(PMP1 +
labs(title = "Simulation 1") +
theme(legend.position = "none"),
PMP2 +
labs(title = "Simulation 2") +
theme(legend.position = "bottom"), ncol = 1)
bind_rows("Output 9" = output9,
"Output 10" = output10,
"Output 11" = output11,
.id = "Simulation") |>
mutate(BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 1) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
load("../output/09_Hu_Hc_1pred.RData")
output9 <- filter(output, model == "normal")
load("../output/10_Hu_Hc_1pred_wrong.RData")
output10 <- output
load("../output/11_Hu_Hc_3preds.RData")
output11 <- output
bind_rows("Output 9" = output9,
"Output 10" = output10,
"Output 11" = output11,
.id = "Simulation") |>
mutate(BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 1) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows("Output 9" = output9,
"Output 10" = output10,
"Output 11" = output11,
.id = "Simulation") |>
mutate(BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows("Output~9" = output9,
"Output~10" = output10,
"Output~11" = output11,
.id = "Simulation") |>
mutate(BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(`9` = "Simulation 9",
`10` = "Simulation 10",
`11` = "Simulation 11",
ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(Simulation,
`9` = "Simulation 9",
`10` = "Simulation 10",
`11` = "Simulation 11",
ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(Simulation,
`9` = "Simulation 9",
`10` = "Simulation 10",
`11` = "Simulation 11",
.ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(Simulation,
`9` = "Simulation~9",
`10` = "Simulation~10",
`11` = "Simulation~11",
.ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed, ncol = 2, nrow = 3) +
scale_color_brewer(palette = "Set2",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(Simulation,
`9` = "Simulation~9",
`10` = "Simulation~10",
`11` = "Simulation~11",
.ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed,
ncol = 2, nrow = 3, scales = "free") +
scale_color_brewer(palette = "Set1",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
bind_rows(`9` = output9,
`10` = output10,
`11` = output11,
.id = "Simulation") |>
mutate(Simulation = recode_factor(Simulation,
`9` = "Simulation~9",
`10` = "Simulation~10",
`11` = "Simulation~11",
.ordered = TRUE),
BF_1unc = map_dbl(fit, ~.x[1, 7]),
BF_1comp = map_dbl(fit, ~.x[1,7] / .x[2,7]),
`Sample size` = factor(n,
levels = c(25, 200),
labels = c(paste0("italic('n') == ", c(25, 200)))),
Model = factor(model,
levels = c("normal", "logit"),
labels = c(expression("OLS~regression"),
expression("Logistic~regression")))) |>
group_by(Simulation, nsim, `Sample size`) |>
mutate(log_BES_1unc = cumsum(log(BF_1unc)),
log_BES_1comp = cumsum(log(BF_1comp)),
log_BES_comp1 = cumsum(log(1/BF_1comp))) |>
pivot_longer(c(log_BES_1unc, log_BES_1comp)) |>
mutate(Alternative = factor(name,
levels = c("log_BES_1unc", "log_BES_1comp"),
labels = c("Unconstrained", "Complement"))) |>
ggplot(aes(x = study,
y = value,
col = `Sample size`,
group = interaction(nsim, `Sample size`, name))) +
geom_hline(yintercept = 0, col = "grey", size = 0.2) +
geom_line(alpha = 0.02) +
facet_wrap(Simulation~Alternative, labeller = label_parsed,
ncol = 2, nrow = 3, scales = "free_y") +
scale_color_brewer(palette = "Set1",
labels = scales::parse_format()) +
labs(x = "Number of aggregated studies",
y = expression(log~BF)) +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
theme(legend.position = "bottom",
text = element_text(family = "Times New Roman"),
legend.text.align = 0)
install.packages("ggh4x")
